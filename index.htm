<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Awtrix3 Pixel Clock Controller</title>
    <!-- Include Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- jQuery (required for $.ajax) -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <style>
        .json-output {
            white-space: pre-wrap;
            font-family: monospace;
            background-color: black;
            color: black;
        }
        .json-key { color: #D6D6D6; }
        .json-string { color: #33ccff; }
        .json-number { color: #ff3300; }
        .json-boolean { color: #99ff33; }
        .json-null { color: #ffcc00; }
    </style>
</head>
<body>
    <div class="container mt-5">
        
      <div class="row justify-content-center my-4">
        <div class="col-6" object-fit-fill>
          <h1 class="text-center">Awtrix3 Pixel Clock Controller</h1>
        </div>
        <div class="col-6 text-center object-fit-fill">
          <iframe src="http://192.168.2.144/fullscreen" width="100%" style="border:none;" frameborder="0"></iframe>
        </div>
      </div>

        <form id="settings-form">
        
            <div class="form-group">
              <div class="row">
            <div class="col-md-3">
                 <label for="atime">Duration:</label>
                 <input type="number" class="form-control" id="atime" min="0" max="7" name="atime" required>
              </div>
               <div class="col-md-3">
                <label for="abri">auto Brightness:</label>
                  <div class="custom-control custom-switch">
                      <input type="checkbox" class="custom-control-input" id="abri" checked>
                      <label class="custom-control-label" for="abri">Enable</label>
                  </div>
                </div>
               <div class="col-md-3">
                 <label for="bri">Brightness:</label>
                 <input type="number" class="form-control" id="bri" min="0" max="255" name="bri" required>
                </div>
                <div class="col-md-3">
                 <label for="volume">Volume:</label>
                 <input type="number" class="form-control" id="volume" name="volume" required>
              </div>
            </div>

        <hr>

            <div class="form-group">
              <div class="row">
                <div class="col-md-3">
                 <label for="sspeed">Scroll speed:</label>
                 <input type="number" class="form-control" id="sspeed" name="sspeed" required>
              </div>
                <div class="col-md-3">
                 <label for="tspeed">Transition speed:</label>
                 <input type="number" class="form-control" id="tspeed" name="tspeed" required>
              </div>
            <div class="col-md-3">
                 <label for="teff">Transition:</label>
                 <select class="form-control" id="teff" name="teff">
                     <option value="0">Random</option>
                     <option value="1">Slide</option>
                     <option value="2">Dim</option>
                     <option value="3">Zoom</option>
                     <option value="4">Rotate</option>
                     <option value="5">Pixelate</option>
                     <option value="6">Curtain</option>
                     <option value="7">Ripple</option>
                     <option value="8">Blink</option>
                     <option value="9">Reload</option>
                     <option value="10">Fade</option>
                 </select>
              </div>
               <div class="col-md-3">
                 <label for="tmode">App stype:</label>
                 <input type="number" class="form-control" id="tmode" name="tmode" required>
              </div>
             </div>
           </div>

        <hr>

            <div class="form-group">
                <div class="row justify-content-center my-4">
                     <div class="col-md-2">
                    <label for="tim">Time: *</label>
                    <div class="custom-control custom-switch text-right">
                        <input type="checkbox" class="custom-control-input" id="tim" name="tim" checked>
                        <label class="custom-control-label" for="tim">Enable</label>
                    </div>
                    </div>
                    <div class="col-md-2">
                        <label for="dat">Date: *</label>
                        <div class="custom-control custom-switch text-right">
                            <input type="checkbox" class="custom-control-input" id="dat" name="dat" checked>
                            <label class="custom-control-label" for="dat">Enable</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                    <label for="hum">Humidity: *</label>
                    <div class="custom-control custom-switch text-right">
                        <input type="checkbox" class="custom-control-input" id="hum" checked>
                        <label class="custom-control-label" for="hum">Enable</label>
                    </div>
                    </div>
                    <div class="col-md-2">
                        <label for="temp">Temperature: *</label>
                        <div class="custom-control custom-switch text-right">
                            <input type="checkbox" class="custom-control-input" id="temp" checked>
                            <label class="custom-control-label" for="temp">Enable</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="bat">Battery: *</label>
                        <div class="custom-control custom-switch text-right">
                            <input type="checkbox" class="custom-control-input" id="bat" checked>
                            <label class="custom-control-label" for="bat">Enable</label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label for="matp">Matrix:</label>
                        <div class="custom-control custom-switch text-right">
                            <input type="checkbox" class="custom-control-input" id="matp" checked>
                            <label class="custom-control-label" for="matp">Enable</label>
                        </div>
                    </div>
                 </div>
        <br />* requires reboot
          </div>

        <hr>

            <button type="button" class="btn btn-primary" onclick="updateSettings()">Update Settings</button>
            <button type="button" class="btn btn-danger float-right" onclick="rebootDevice()">Reboot Device</button>
        </form>

        <hr>

        <div class="row">
            <div class="col-md-6">
                <h3>Current Settings</h3>
                <pre id="settings-result" class="json-output text-left"></pre>
            </div>
            <div class="col-md-6">
                <h3>System Stats</h3>
                <pre id="stats-result" class="json-output text-left"></pre>
            </div>
        </div>
    </div>

    <script>
        const baseUrl = 'http://192.168.2.144/api'; // Replace with your Awtrix IP

        function updateSettings() {
            const atime = $('#atime').val();
            const abri = $('#abri').is(':checked');
            const bri = $('#bri').val();
            const teff = $('#teff').val();
            const tspeed = $('#tspeed').val();
            const tmode = $('#tmode').val();
            const sspeed = $('#sspeed').val();
            const tim = $('#tim').is(':checked');
            const dat = $('#dat').is(':checked');
            const hum = $('#hum').is(':checked');
            const temp = $('#temp').is(':checked');
            const bat = $('#bat').is(':checked');
            const matp = $('#matp').is(':checked');
            const volume = $('#volume').val();

            $.ajax({
                url: `${baseUrl}/settings`, // Adjust this URL based on the API documentation
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    "ATIME": atime,
                    "ABRI": abri,
                    "BRI": bri,
                    "TEFF": teff,
                    "TSPEED": tspeed, // ms
                    "TMODE": tmode, //
                    "SSPEED": sspeed, //
                    "TIM": tim,
                    "DAT": dat,
                    "HUM": hum,
                    "TEMP": temp,
                    "BAT": bat,
                    "MATP": matp,
                    "VOL": volume
                }),
                success: function(response) {
                    fetchSettings();
                },
                error: function(error) {
                    console.error('Error updating settings:', error);
                }
            });
        }

        function fetchSettings() {
            $.ajax({
                url: `${baseUrl}/settings`, // Adjust this URL based on the API documentation
                type: 'GET',
           success: function(data) {
               // Pre-fill the form with current settings
               $('#atime').val(data.ATIME);
               $('#abri').prop('checked', data.ABRI);
               $('#bri').val(data.BRI);
               $('#teff').val(data.TEFF);
               $('#tspeed').val(data.TSPEED);
               $('#tmode').val(data. TMODE);
               $('#sspeed').val(data. SSPEED);
               $('#tim').prop('checked', data.TIM);
               $('#dat').prop('checked', data.DAT);
               $('#hum').prop('checked', data.HUM);
               $('#temp').prop('checked', data.TEMP);
               $('#bat').prop('checked', data.BAT);
               $('#matp').prop('checked', data.MATP);
               $('#volume').val(data.VOL);

                    $('#settings-result').html(syntaxHighlight(data));
                    fetchStats(); // Fetch stats after updating settings
                },
                error: function(error) {
                    console.error('Error fetching settings:', error);
                }
            });
        }

        function fetchStats() {
            $.ajax({
                url: `${baseUrl}/stats`, // Adjust this URL based on the API documentation
                type: 'GET',
                success: function(response) {
                    $('#stats-result').html(syntaxHighlight(response));
                },
                error: function(error) {
                    console.error('Error fetching stats:', error);
                }
            });
        }

        function rebootDevice() {
            $.ajax({
                url: `${baseUrl}/reboot`, // Adjust this URL based on the API documentation
                type: 'POST',
                success: function(response) {
                    alert('Device is rebooting...');
                },
                error: function(error) {
                    console.error('Error rebooting device:', error);
                }
            });
        }

     // Function to colorize JSON output
     function syntaxHighlight(json) {
       if (typeof json != 'string') {
         json = JSON.stringify(json, undefined, 2);
       }
       json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
       return json.replace(/("(\\u[\da-fA-F]{4}|\\[^u]|[^\\"])*"(\s*:)?)|(\b(true|false|null)\b)|(\b\d+\b)/g, function (match) {
         let cls = 'number';
         if (/^"/.test(match)) {
           if (/:$/.test(match)) {
             cls = 'key';
           } else {
             cls = 'string';
           }
         } else if (/true|false/.test(match)) {
           cls = 'boolean';
         } else if (/null/.test(match)) {
           cls = 'null';
         }
         return '<span class="json-' + cls + '">' + match + '</span>';
       });
     }
        
        $(document).ready(function() {
            fetchSettings();
        });
    </script>
</body>
</html>
